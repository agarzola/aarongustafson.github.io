<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Browse by Tag: Web Design | Aaron Gustafson]]></title>
  <link href="http://aaron-gustafson.com/notebook/tags/web-design/atom.xml" rel="self"/>
  <link href="http://aaron-gustafson.com/"/>
  <updated>2015-02-18T22:26:15-08:00</updated>
  <id>http://aaron-gustafson.com/</id>
  <author>
    <name><![CDATA[Aaron Gustafson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Who Should Pay?]]></title>
    <link href="http://aaron-gustafson.com/notebook/who-should-pay/"/>
    <updated>2015-02-18T20:35:06-08:00</updated>
    <id>http://aaron-gustafson.com/notebook/who-should-pay</id>
    <content type="html"><![CDATA[<p>In more than a handful of conversations lately, it’s become quite clear that we, the web development community, are prioritizing our own convenience and our own time over that of our users. With our industry’s focus on “user-centered design”, you might find that hard to believe, but it’s true.</p>

<!-- more -->


<p>Here’s one example. In reaction to <a href="/notebook/css-variables-are-a-bad-idea/">my post on why I think CSS variables are a bad idea</a>, <a href="http://sass-lang.com">SASS</a> core team member <a href="https://twitter.com/chriseppstein/">Chris Eppstein</a> had this to say:</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>Fundamentally, I agree with his sentiment: A preprocessor should <em>not</em> be a requirement for authoring CSS. Thankfully, <em>it never was</em>; you can build amazing things using only hand-authored CSS. And if you find a preprocessor helpful to your process for one reason or another, great. But using a preprocessor never has been (nor should it ever be) a requirement.</p>

<p>But Chris was not railing against preprocessors. Instead, he is echoing a sentiment held by many people in the preprocessor community. He feels CSS is not as powerful as it could/should be and he hopes that one day soon preprocessors won’t need to exist because CSS will have all of the features they offer natively. Like variables.</p>

<p>I used to feel that way. I used to want variables… and mixins… and functions… and loops… and declaration block-level inheritance. But I’ve changed my mind.</p>

<p>Don’t get me wrong, I love these constructs. I use them nearly every day in the SASS I write and I am incredibly thankful for the hard work that has gone into their creation and maintenance.  Chris alone has probably saved me several weeks worth of work over the last four years through his contributions to SASS and <a href="http://compass-style.org/">Compass</a>. I definitely owe him a beer (or three).</p>

<p>Ok, so if my issue is not with the idea of programmatically generating styles, why would I not want these to be part of CSS, the <i>lingua franca</i> for design on the Web? Well, it’s pretty simple: Converting all of these constructs into something that is actionable by the browser takes time and processing power. Someone has to pay that cost and I wouldn’t feel right passing that cost on to my end users if there are better options.</p>

<p>This is a topic I bring up often in my conference talks and workshops: Every decision we make affects the user experience in some way.</p>

<p>When we add another JavaScript library or plugin, it’s no big deal from our perspective. We tend to have fast connections and faster processors. For our users it’s another story: It’s one more thing to request. One more thing to download. One more script to parse. One more thing holding up page rendering. One more reason to leave our site and seek out a competitor who actually values their time.</p>

<p>When we hide an <code>img</code> in the small screen version of our responsive design using <code>display: none</code>, the cost to us is quite minimal. It’s just one little declaration. What’s the harm? But the cost to our end users is quite significant: Longer load times, slower performance, and (in some cases) in real dollars if they are on a <a href="http://blog.kaspersky.com/cost-aware/">metered data connection</a>. And they don’t even get to see the image they paid for!</p>

<p>When we decide to build a site using a front-end JavaScript MVC framework, it can make the development process go so much faster for us and we can reduce our need for a robust back-end infrastructure. I mean everyone has JavaScript these days… <a href="/notebook/a-fundamental-disconnect/">the browser is the new VM</a>. But when we do this, our users suffer because we don’t give their browsers real HTML. Instead we force them to download a hefty framework so we can move all of the processing we would normally handle on a much faster, dedicated server to their questionably-capable machine instead. Oh, and if the browser encounters an error while parsing or executing the JavaScript execution, they don’t get anything at all. Welcome to the Modern Web™!</p>

<hr>


<p>When I look around, I see our community spending a lot of time coming up with new tools and techniques to make our jobs easier. To ship faster. And it’s not that I’m against efficiency, but I think we need to consider the implications of our decisions. And if one of those implications is making our users suffer—or potentially suffer—in order to make our lives easier, I think we need to consider their needs above our own.</p>

<p>So yes, I would love a world where preprocessors are unnecessary, but I would much rather spend a few seconds (or even a few minutes) transcompiling my SASS into CSS in order to save my users even a few milliseconds. It’s the same reason I optimize my images, minify my JavaScript, use Gzip, and lazy load design and experience enhancements only in contexts where they provide a real benefit.</p>

<p>Our users should never foot the bill for our convenience. We need to put their needs above our own.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Three Worthwhile Posts on Progressive Enhancement]]></title>
    <link href="http://aaron-gustafson.com/notebook/three-worthwhile-posts-on-progressive-enhancement/"/>
    <updated>2015-02-13T07:14:40-08:00</updated>
    <id>http://aaron-gustafson.com/notebook/three-worthwhile-posts-on-progressive-enhancement</id>
    <content type="html"><![CDATA[<p>Jason Garber has penned a series of posts on progressive enhancement. Here’s a quick rundown on what they cover and why you should read them.</p>

<!-- more -->


<h2><a href="http://sixtwothree.org/posts/designing-experience-layers">Designing Experience Layers</a></h2>

<p>In his first post, Jason picks up on a drumbeat I’ve been hammering on for years: we need to consider experience a continuum, not a monolithic thing.</p>

<blockquote><p>Today’s Web makes no guarantees. Every bit of code—HTML, CSS, and JavaScript—shipped from a server across the wire acts as a suggestion as to how the browser should interpret and display content. More often than not, everything works planned, but for any number of reasons, a browser could fail to request or render a particular asset.</p></blockquote>

<p>In other words, get to know <a href="http://adaptivewebdesign.info/1st-edition/chapter-1.html#adapt-or-die">fault tolerance as it applies to web design</a> and <a href="http://aaron-gustafson.com/notebook/a-fundamental-disconnect/">don’t make any assumptions about how your content will be rendered/experienced</a>.</p>

<p>His conclusion is an important one:</p>

<blockquote><p>Approaching design through the lens of experience layers is the design strategy for the Web; one that’s better for users and designers alike.</p></blockquote>

<p>Amen!</p>

<h2><a href="http://sixtwothree.org/posts/in-defense-of-progressive-enhancement">In Defense of Progressive Enhancement</a></h2>

<p>In his follow-up, Jason defends his position against <a href="http://viget.com/inspire/designing-experience-layers#comment-1847156038">a lengthy comment from his supervisor at Viget</a>. Jason’s responses are dead on:</p>

<ol>
<li>JavaScript is not a baseline (or a given) and</li>
<li>When large sites put their eggs in the JS basket, they set a bad example for other developers.</li>
</ol>


<p>His summation is perfect:</p>

<blockquote><p>I remain unconvinced that abandoning progressive enhancement in favor of JavaScript-first development is better for users or is the direction the Web is inevitably heading. It’s our responsibility to do right by the billions already online and the next billion preparing to come online. We can achieve this by designing robust, resilient, layered experiences using techniques like progressive enhancement.</p></blockquote>

<p>Again, fantastic.</p>

<h2><a href="http://sixtwothree.org/posts/the-practical-case-for-progressive-enhancement">The Practical Case for Progressive Enhancement</a></h2>

<p>Continuing the thread, Jason assembles more reasons to adopt the progressive enhancement philosophy.</p>

<ol>
<li><strong>The “Moral” Argument for Progressive Enhancement</strong> &ndash; Personally, I think Jason gives in too easily on this. Access to content is <a href="http://www.pewinternet.org/topics/digital-divide/">a social justice issue</a> and that is nothing to gloss over. In some cases it is also a <a href="http://www.section508.gov/">legal requirement</a>.</li>
<li><strong>The “Cost” of Progressive Enhancement</strong> &ndash; Jason does a good job addressing the costs (monetarily and temporally) associated with adopting progressive enhancement in terms of building, testing, and supporting websites. As he says, it is more costly to &ldquo;bolt on&rdquo; accessibility and progressive enhancement at the end of a project. He is also correct in his assertion that progressively-enhanced websites actually require less testing. And when you <a href="http://bradfrost.com/blog/mobile/support-vs-optimization/">draw a stark line between support and optimization</a>, support for additional browsers and devices also becomes far less costly. What Jason was missing was numbers to back all this up. <a href="http://blog.easy-designs.net/archives/the-true-cost-of-progressive-enhancement/">I have those numbers</a>. Enjoy.</li>
<li><strong>Practicality</strong> &ndash; Finally, Jason calls out games and their ilk as edge cases. He correctly asserts that the vast majority of properties on the Web could easily be built following progressive enhancement. Sure, you might not build a Photoshop clone using progressive enhancement, but how many of you are building an image editor for the Web? I didn’t think so.</li>
</ol>


<h2>Conclusion</h2>

<p>In all, this was a nice little series. Great work Jason! If you want to dig into this progressive enhancement stuff a bit more, you can read the entirety of my award-winning book <a href="http://adaptivewebdesign.info/1st-edition/"><cite>Adaptive Web Design: Crafting Rich Experiences with Progressive Enhancement</cite> online, for free</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ch-ch-ch-changes]]></title>
    <link href="http://aaron-gustafson.com/notebook/ch-ch-ch-changes/"/>
    <updated>2015-01-30T07:14:40-08:00</updated>
    <id>http://aaron-gustafson.com/notebook/ch-ch-ch-changes</id>
    <content type="html"><![CDATA[<p>Monday, February 2nd will be the start of a new chapter in my professional career: I will joining Microsoft as a standards evangelist.</p>

<p><em>Wha?!</em></p>

<p>The reasons for the move are manifold, but I will do my best to summarize by taking you on the journey I’ve been on and hopefully that will help you understand why I will be leaving agency life behind and joining a browser maker (and the makers of Internet Explorer at that).</p>

<!-- more -->




<hr>


<p>I’ve been working on the Web since 1996. That’s nearly 20 years of building everything from simple marketing campaign sites to emails to complex transactional websites and custom content management systems. In that time, I’ve gained skills on both the front end and the back end and rolled the 10,000 hour odometer at least a couple of times.</p>

<p>It’s been great. I love building things and I love helping our amazing clients put awesome information and services on the Web. But at the same time, I’ve enjoyed working with teams to help <em>them</em> solve their own problems even more than I’ve enjoyed solving them directly. It’s why I love speaking at conferences and running workshops: I love to see the lightbulbs come on over people’s heads!</p>

<p>Over the last few years, <a href="http://easy-designs.net">Kelly and I</a> have made a conscious effort to reduce the amount of production work we’ve been doing in favor of more consulting. And early last year we came to a sort of crossroads: We knew we could keep doing what we’d been doing and things would be good, but we weren’t feeling challenged anymore.</p>

<p>And so we began to brainstorm ideas of what we’d like to do in the next phase of our lives.</p>

<hr>


<p>Kelly came to the Web from an education and community organizing background, so she wanted to find a way to incorporate those with her technical knowledge. And about two months ago, she got that opportunity and she took a position as the Program Manager for <a href="http://techgoeshomecha.org/">Tech Goes Home Chattanooga</a>, an organization committed to bridging the digital divide in our fair city.</p>

<p>When I close my eyes and think about what makes me happiest, it’s writing, speaking, and spreading the word about web design best practices. The folks I know who get to do that full-time tend to be developer evangelists (or <a href="http://adactio.com">Jeremy</a>). And so I began pondering that possibility.</p>

<p>As I went through the list of browser makers in my mind, Microsoft stuck out.</p>

<p>Some of you might think that’s odd. I mean come on, IE has been the red-headed stepchild of the web design world for the better part of a decade. Why on earth would I want to work there?</p>

<p>Well, I’ll tell you: Despite its market largesse, IE (and in many ways Microsoft) is operating like the scrappy upstart. And I root for underdogs.</p>

<hr>


<p>I think back to the early days of the Web when I would need a Windows license for every virtual machine I wanted to run in order to test each browser version. It was a pain in the ass and made me curse Microsoft on a regular basis.</p>

<p>But things have changed. A lot.</p>

<p>A few years back, the IE team launched <a href="http://modern.ie">modern.IE</a>, an awesome resource with VMs that were free for the taking. They also launched <a href="https://www.modern.ie/en-us/report">a free tool for identifying coding issues and checking cross-browser interoperability</a>. Then they opened up <a href="http://status.modern.ie">the roadmap for standards implementations in IE</a>. And just recently they gave us <a href="https://remote.modern.ie/">RemoteIE</a> and did away with the need for VMs altogether (at least to test our stuff on the latest version of IE).</p>

<p>This is a very different Microsoft.</p>

<p>Now sure, there’s still more they could open up, but this is progress. Big ships are slow to turn, but this ship is turning.</p>

<p>I want to be a part of that.</p>

<hr>


<p>I will be joining Microsoft as a “Senior Program Manager”, but titles don’t matter much to me. I see my job boiling down to a few key things:</p>

<ol>
<li>Helping web designers and developers better understand the possibilities of the Web;</li>
<li>Advocating for interoperable, accessible web design best practices;</li>
<li>Being a voice for the web design and development community to communicate their needs to the IE team in order to improve the browser; and</li>
<li>Being an internal advocate for Web standards implementations in other Microsoft products (think Visual Studio, Outlook, Word).</li>
</ol>


<p>Microsoft is not hiring me to be a salesman—<em>thank god, they’d be pretty disappointed</em>—they are hiring me to continue being me. I will continue writing, I will continue speaking, and I will continue educating. The only thing that has changed is that I can spend all of my time doing that, rather than having to balance it with client work.</p>

<hr>


<p>So Monday starts a new chapter in my career. It’s a little scary (I haven’t worked for someone else for over a decade), but it is also exciting. I am comforted by the fact that I am joining an amazing team: As he announced yesterday, <a href="http://christianheilmann.com/2015/01/29/on-towards-my-next-challenge-2/">Christian Heilmann will also join Microsoft on the 2nd</a> and the <a href="https://www.youtube.com/watch?v=YAIPCp_BOGU">charismatic Rey Bango</a> will be leading our merry little conga line.</p>

<p>I’m excited about the future and I’m thrilled to be given the opportunity to focus on making the Web better… for everyone.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The One Weird Trick That Takes the Pain Out of Cross-browser Testing]]></title>
    <link href="http://aaron-gustafson.com/notebook/the-one-weird-trick-that-takes-the-pain-out-of-cross-browser-testing/"/>
    <updated>2015-01-26T08:24:25-08:00</updated>
    <id>http://aaron-gustafson.com/notebook/the-one-weird-trick-that-takes-the-pain-out-of-cross-browser-testing</id>
    <content type="html"><![CDATA[<p>Love this!</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sending Birthday Well-wishes to Molly]]></title>
    <link href="http://aaron-gustafson.com/notebook/sending-birthday-well-wishes-to-molly/"/>
    <updated>2015-01-25T07:20:25-08:00</updated>
    <id>http://aaron-gustafson.com/notebook/sending-birthday-well-wishes-to-molly</id>
    <content type="html"><![CDATA[<p>Today is the birthday of an amazing woman, <a href="http://molly.com">Molly Holzschlag</a>, and she needs our help!</p>

<!-- more -->


<p>If you’re relatively new to the Web, you may not recognize her name, but you are benefiting from her legacy. You see, Molly has been a force of nature on the Web for the better part of two decades. She was an <a href="https://web.archive.org/web/20000229205046/http://www.molly.com/molly/news.html">early blogger</a>. She was our fearless leader at the <a href="http://webstandards.org">Web Standards Project</a> for three years. <a href="http://www.amazon.com/gp/search?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;index=books&amp;keywords=molly%20holzschlag&amp;linkCode=ur2&amp;tag=easydesign-20&amp;linkId=BDCVT2YGNT7BNCHR">Molly wrote <em>35 books</em> on Web design, CSS, and other Web standards-related topics</a>. She’s presented at conferences the world over and educated thousands of Web designers and developers during her tenure. And Molly was way ahead of us when it came to understanding the Web:</p>

<blockquote><p>Everyone has something to contribute to the World Wide Web. Why? Because the Web is of us. Whatever we are as humans is now manifest in the Web: Our beauty, hatred, fragility and ferocity; our kindness, cruelty, confusion and clarity. Our wars. Our peace.</p></blockquote>

<p>You might think that with all this acclaim, Molly must be pretty well off. Well, that’s not the case. Molly was far more concerned about the good of the Web than fancy jobs, lofty titles, and hefty paychecks. She did much of her work for free. In fact, she even ran a free &ldquo;train the trainer&rdquo; camp wherein she hosted a group of college-level educators <em>at her home</em> to get them up to speed on what they needed to know and what they should be teaching the next generation of Web designers.</p>

<p>I met Molly in 2003 when I was invited to speak at COMDEX. It was my first conference talk (and professional speaking gig) ever. I gave a talk on XHTML and she same up and complimented me on it. I had been incredibly nervous, so hearing someone so experienced compliment me on my material, it relieved my stress and made me feel better about by performance. And when she asked me to join her on stage for her next talk—her co-presenter Eric Meyer had to cancel last-minute—I was overjoyed. I don’t know that I added much to her CSS discussion, but I was so appreciative when she took me under her wing.</p>

<p>In 2005 we shared the stage again as we went on a five-city tour, giving 3 days of in-depth HTML, CSS, and JavaScript workshops. I learned a ton from Molly about presenting and she became the big sister I never had. My champion. My mentor.</p>

<p>I know I am not the only one with a story like this. Molly has touched so many Web designers’ and developers’ lives—both directly and indirectly—with her knowledge, compassion, and mentorship.</p>

<p>In 2013, Molly fell ill at a Web conference. She’s spent the last two years in recovery from intense chemotherapy and the damage it did to her body. She is incredibly weak, unable to work, and needs our help to pay for her basic living and medical expenses. So I ask you: Please dig deep and contribute to <a href="http://www.gofundme.com/ThanksMols">the GoFundMe campaign</a> Kimmie Blessing has set up on her behalf.</p>

<p>For all that Molly has done for us, let’s <a href="http://www.gofundme.com/ThanksMols">do something for her</a>.</p>

<p>Happy birthday Molly! We love you, miss you, and hope you come back to us soon!</p>
]]></content>
  </entry>
  
</feed>
