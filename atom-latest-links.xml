<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title><![CDATA[Aaron Gustafson - Latest Links]]></title>
	<link href="http://aaron-gustafson.com/atom-latest-links.xml" rel="self"/>
	<link href="http://aaron-gustafson.com/"/>
	<updated>2015-02-05T20:10:16-05:00</updated>
	<id>http://aaron-gustafson.com/</id>
	<author>
		<name><![CDATA[Aaron Gustafson]]></name>
		
	</author>
	<generator uri="http://octopress.org/">Octopress</generator>

	
		
			<entry>
				<title type="html"><![CDATA[You’re Missing the Point of Server-Side Rendered JavaScript Apps]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/youre-missing-the-point-of-server-side-rendered-javascript-apps/"/>
				<updated>2015-02-05T19:20:05-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/youre-missing-the-point-of-server-side-rendered-javascript-apps</id>
				<content type="html"><![CDATA[<p>I agree with Tom Dale. Yup, you read that right: I agree with Tom Dale. Well, he finally said something sensible:</p>

<blockquote><p>Say what you will about server-rendered apps, the performance of your server is much more predictable, and more easily upgraded, than the many, many different device configurations of your users. Server-rendering is important to ensure that users who are not on the latest-and-greatest can see your content immediately when they click a link.</p></blockquote>

<p>You might remember Tom as the guy who <a href="http://tomdale.net/2013/09/progressive-enhancement-is-dead/">declared progressive enhancement dead in late 2013</a>. He’s apparently seen the light and has been hard at work to get Ember ready for server side rendering.</p>

<p>I’m shocked, but glad he finally came around. Progressive enhancement FTW!</p>
<p><a rel="full-article" href="http://tomdale.net/2015/02/youre-missing-the-point-of-server-side-rendered-javascript-apps/">Read on Tom Dale’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Power of the Platforms]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/power-of-the-platforms/"/>
				<updated>2015-02-05T13:11:05-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/power-of-the-platforms</id>
				<content type="html"><![CDATA[<p>This is a great post from Simon St. Laurent on how isolated Web &ldquo;platforms&rdquo; have come and go while the &ldquo;tangled mess&rdquo; that is HTML, CSS, and JavaScript soldiers on. It’s a must read.</p>

<blockquote><p>The web bends with the wind, supporting incredibly diverse use cases across a wide variety of environments. Your code should, too.</p></blockquote>
<p><a rel="full-article" href="http://radar.oreilly.com/2015/02/power-of-the-platforms.html">Read on O’Reilly Radar&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[The Truth About Multiple H1 Tags in the HTML5 Era]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/the-truth-about-multiple-h1-tags-in-the-html5-era/"/>
				<updated>2015-02-03T16:14:54-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/the-truth-about-multiple-h1-tags-in-the-html5-era</id>
				<content type="html"><![CDATA[<p>This is a beautiful and exhaustive survey of heading level usage before HTML5 and in HTML5. Sadly, <a href="http://www.w3.org/TR/html5/sections.html#outlines">no one implements the HTML5 scenario yet</a>. But it’s nice to dream. Maybe one day.</p>

<p>For more:</p>

<ul>
<li><a href="http://www.paciellogroup.com/blog/2013/10/html5-document-outline/">The HTML5 Document Outline</a></li>
<li><a href="http://blog.adrianroselli.com/2013/12/the-truth-about-truth-about-multiple-h1.html">The Truth about “The Truth About Multiple H1 Tags”</a></li>
</ul>

<p><a rel="full-article" href="http://webdesign.tutsplus.com/articles/the-truth-about-multiple-h1-tags-in-the-html5-era--webdesign-16824">Read on Tuts+&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Emulating Failure]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/emulating-failure/"/>
				<updated>2015-02-02T07:09:54-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/emulating-failure</id>
				<content type="html"><![CDATA[<p>Another beautifully-eloquent post about the potential perils of <a href="http://www.w3.org/wiki/WebComponents/">Web Components</a>:</p>

<blockquote><p>HTML has a problem. As implemented in browsers many interactive elements cannot be styled as desired by web developers, or developers as directed by designers, marketing or any of the numerous others whose wishes code cutters must abide by.</p>

<p>…</p>

<p>Now in 2015 we have web components re-inventing native HTML buttons, radio buttons and checkboxes, for relief from the scourge of divitis, perpetrated upon us by the as shipped inability to style a native HTML element as desired.</p>

<p>Is it just me, or are new web UI technologies continuing to try to solve the wrong problems?</p></blockquote>

<p>Now, the <a href="http://glazkov.com/2011/01/14/what-the-heck-is-shadow-dom/">Shadow DOM</a> (and <a href="https://gist.github.com/webtobesocial/aefd6e25064c08e0cc9a">associated pseudo-elements</a>) should allow us to control the style of these elements. The deeper problem is functionality. Take <a href="https://html.spec.whatwg.org/multipage/forms.html#the-datalist-element">the <code>datalist</code> for predictive typing</a>. What if you want fuzzy search instead of initial search when someone types. That’s not supported. This is where Web Components get interesting.</p>
<p><a rel="full-article" href="http://www.paciellogroup.com/blog/2015/02/emulating-failure/">Read on The Paciello Group&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Accessible Timeout Notifications]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/accessible-timeout-notifications-tink/"/>
				<updated>2015-02-01T13:23:17-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/accessible-timeout-notifications-tink</id>
				<content type="html"><![CDATA[<p>I’m not generally a fan of session timeouts, but if you have to do it, Léonie Watson has outlined a pretty good route to go. My only nit might be using a <code>role</code> of &ldquo;alert&rdquo; or &ldquo;alertdialog&rdquo; instead of &ldquo;group&rdquo;, but that’s because it would trigger an audible chime and get read by assistive tech. But that’s pretty minor.</p>

<p>Pay particular attention to the keyboard focus stuff too.</p>
<p><a rel="full-article" href="http://tink.uk/accessible-timeout-notifications/">Read on Tink&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[The Browser Accessibility Tree]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/the-browser-accessibility-tree/"/>
				<updated>2015-02-01T13:20:41-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/the-browser-accessibility-tree</id>
				<content type="html"><![CDATA[<p>A clear and concise overview of browsers’ accessibility trees, using the <code>video</code> element as an example. Yet another reason to love <a href="https://twitter.com/stevefaulkner">Steve Faulkner</a>.</p>
<p><a rel="full-article" href="http://www.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/">Read on The Paciello Group&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
	
		
			<entry>
				<title type="html"><![CDATA[Extensibility]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/extensibility/"/>
				<updated>2015-01-30T09:44:38-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/extensibility</id>
				<content type="html"><![CDATA[<p>Great post from Jeremy on Web components. I couldn’t agree more:</p>

<blockquote><p>I was looking forward to getting really stuck into Web Components and figuring out ways of creating powerful little extensions that I could start using now. But if Web Components turn out to be an all-or-nothing technology—a “platform”, if you will—then I will not only not be using them, I’ll be actively arguing against their use.</p></blockquote>
<p><a rel="full-article" href="https://adactio.com/journal/8276">Read on Adactio’s Journal&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Thoughts on Pagination]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/thoughts-on-pagination/"/>
				<updated>2015-01-28T17:51:36-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/thoughts-on-pagination</id>
				<content type="html"><![CDATA[<p>Pagination is pretty arbitrary. Could it be better? Probably.</p>

<blockquote><p>For example, take your average photo site that displays the content in a reverse chronological order: that is, newest to oldest. Let&rsquo;s say your friend has posted 2000 photos to this site. The site shows the viewer 10 things per page. With our prolific user, this gives us 200 pages.</p>

<p>Going to the middle of this content takes us to page 100. What does this mean, beyond we&rsquo;re at the middle? Not much.</p></blockquote>
<p><a rel="full-article" href="https://nolancaudill.com/2012/03/24/pagination/">Read on Nolan Caudill’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Why All Three Game Consoles Have Now Ditched the TV]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/why-all-three-game-consoles-have-now-ditched-the-tv/"/>
				<updated>2015-01-28T17:48:16-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/why-all-three-game-consoles-have-now-ditched-the-tv</id>
				<content type="html"><![CDATA[<p>I hadn’t really thought about it with respect to gaming, but this has definitely been an interesting trend:</p>

<blockquote><p>More and more so, the programming we once watched on TV is migrating to our tablets and phones. Cable providers have apps that let customers access live television, and even the contents of their DVRs, on their personal devices. Comcast et al realize they must let you access that content where your eyeballs are, or you’ll find other content. Ditto Nintendo, Microsoft and Sony. Game consoles cannot be married to the TV.</p></blockquote>
<p><a rel="full-article" href="http://www.wired.com/2015/01/xbox-streaming-windows-10/">Read on Wired&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[WhatsApp Doesn't Understand the Web]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/whatsapp-doesnt-understand-the-web/"/>
				<updated>2015-01-27T11:35:18-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/whatsapp-doesnt-understand-the-web</id>
				<content type="html"><![CDATA[<p>I am not a WhatsApp user, but I have long been impressed with the way they embrace operating systems others ignore. I think it has been a key to their success and speaks to the &ldquo;accessibility&rdquo; (in the broader sense) of their service.</p>

<p>I am completely baffled by the design decisions they made in their Web client, as is Andre Alves Garzia.</p>
<p><a rel="full-article" href="http://andregarzia.com/posts/en/whatsappdoesntunderstandtheweb/">Read on Andre Alves Garzia’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Inside Microsoft’s New Rendering Engine for the &quot;Project Spartan&quot;]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/inside-microsofts-new-rendering-engine-for-the-project-spartan-smashing-magazine/"/>
				<updated>2015-01-27T11:32:05-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/inside-microsofts-new-rendering-engine-for-the-project-spartan-smashing-magazine</id>
				<content type="html"><![CDATA[<p>This is Microsoft’s Jacob Rossi on how “Project Spartan” came to be and what is going on inside the browser that comes after Internet Explorer.</p>

<p>On that elated feeling of removing legacy code:</p>

<blockquote><p>[S]wathes of IE legacy were deleted from the new engine. Gone were document modes. Removed was the subsystem responsible for emulating IE8 layout quirks. VBScript eliminated. Remnants like attachEvent, X-UA-Compatible, currentStyle were all purged from the new engine. The codebase looks little like Trident anymore (far more diverged already than even Blink is from WebKit).</p></blockquote>

<p>On a faster dev cycle for the new browser:</p>

<blockquote><p>[W]e’ll treat Windows 10 as a service—keeping users up to date and delivering features when they are ready (“auto-update”), not waiting for the next major release. This means the new rendering engine will always be truly evergreen.</p></blockquote>

<p>On opening up the process:</p>

<blockquote><p>Another welcomed change that we’ve been rolling out over the past year is a promise for increased openness about our web platform plans and roadmap. Over the last year, you’ve hopefully experienced some of this through our open standards roadmap15 (one of my personal side projects), our Reddit AMA16, regular dialog through @IEDevChat17, and sharing preview builds18 very early in our development process. You’ll see more of this over the next year.</p></blockquote>

<p>Promising stuff all around. I am still wondering if we’ll eventually see the new browser appear on other operating systems (even if it’s  just the browser chrome and not the rendering engine—like Chrome on iOS). Time will tell.</p>
<p><a rel="full-article" href="http://www.smashingmagazine.com/2015/01/26/inside-microsofts-new-rendering-engine-project-spartan/">Read on Smashing Magazine&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Flash of Faux Text]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/flash-of-faux-text/"/>
				<updated>2015-01-27T08:56:47-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/flash-of-faux-text</id>
				<content type="html"><![CDATA[<p>In his continuing exploration of font loading optimization, Zach Leatherman proposes loading a Roman (i.e. normal weight, non-italic) font first and letting the browser synthesize (i.e. fake) the bold, italic, etc. variants to reduce the load time and reflow of the document and let users start reading as soon as possible. Then he lazy loads the additional font weights and styles so the browser can swap out the synthesized glyphs for the actual ones.</p>

<p>Super clever stuff Zach!</p>
<p><a rel="full-article" href="http://www.zachleat.com/web/foft/">Read on Zach Leatherman’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[All of This Has Happened Before and Will Happen Again]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/all-of-this-has-happened-before-and-will-happen-again/"/>
				<updated>2015-01-27T08:49:25-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/all-of-this-has-happened-before-and-will-happen-again</id>
				<content type="html"><![CDATA[<p>Another awesome post from Adrian Roselli on the perils of pushing for a one-browser (a.k.a. WebKit) world:</p>

<blockquote><p>Everyone who calls for WebKit in Internet Explorer is exactly the same kind of developer who would have coded to Internet Explorer 15 years ago (and probably happily displayed the best viewed in badge).</p>

<p>If you are that developer, then it will all be your fault when it happens again. When WebKit is no longer the hot engine. When Chrome loses its dominance. When Apple&rsquo;s market share falls to match the developing world. You will be to blame.</p>

<p>Do you think that won&rsquo;t happen? Just look to Android browser fragmentation, or WebKit failing to support a standard that Firefox and IE have nailed, or Chrome introducing its own proprietary features (can&rsquo;t find the link; it&rsquo;s coming), or failing to use best practices as it tries to carry the next big thing forward, or the complete lack of developer relations from Apple. We&rsquo;ve had over half a decade of warning signs.</p>

<p>It&rsquo;s happening again, and every petulant, lazy developer who calls for a WebKit-only world is responsible.</p></blockquote>
<p><a rel="full-article" href="http://blog.adrianroselli.com/2015/01/all-of-this-has-happened-before-and.html">Read on Adrian Roselli’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Meet Vivaldi, a New Browser From the Former CEO of Opera]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/meet-vivaldi-a-new-browser-from-the-former-ceo-of-opera/"/>
				<updated>2015-01-27T08:45:00-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/meet-vivaldi-a-new-browser-from-the-former-ceo-of-opera</id>
				<content type="html"><![CDATA[<p>And here we have yet another new browser. Vivaldi is inspired by the Opera of old and is pretty feature-rich according to the article. I’ll give it a shot.</p>

<p>Vivaldi runs Blink under the hood (like Opera and Chrome), which lends credence to my theory that <a href="http://aaron-gustafson.com/notebook/competing-on-chrome/">soon browsers will compete on chrome, rather than standards implementations</a>.</p>
<p><a rel="full-article" href="http://thenextweb.com/apps/2015/01/27/meet-vivaldi-new-browser-former-ceo-opera/">Read on The Next Web&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Web Devvy Ways to Practice Gratitude and Empathy]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/web-devvy-ways-practice-gratitude-empathy/"/>
				<updated>2015-01-26T12:43:01-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/web-devvy-ways-practice-gratitude-empathy</id>
				<content type="html"><![CDATA[<p>A great post from Chris Coyier:</p>

<blockquote><p> I&rsquo;m starting to think empathy really is one of the most valuable skills (if you can call it a skill) that you can have. If you can put yourself in another persons shoes, you can imagine what it&rsquo;s like to use the things you make. That gives you mad UX skills. It means you can write a damn fine support email. You can make a meeting worth having. You can communicate clearly, because you can imagine what it&rsquo;s like to receive that communication.</p></blockquote>

<p>Empathy is where it’s at. Check out his list for ways to increase your &ldquo;devvy&rdquo; empathy.</p>
<p><a rel="full-article" href="http://css-tricks.com/web-devvy-ways-practice-gratitude-empathy/">Read on CSS Tricks&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[CSS Bookmarklets for Testing and Fixing]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/css-bookmarklets-for-testing-and-fixing/"/>
				<updated>2015-01-26T11:38:34-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/css-bookmarklets-for-testing-and-fixing</id>
				<content type="html"><![CDATA[<p>Another fantastic resource from Adrian Roselli. This is a collection of diagnostic tools that</p>

<ul>
<li>Restore Link Underlines,</li>
<li>Restore Focus Outlines,</li>
<li>Find Inline Styles,</li>
<li>Find Duplicate ARIA Roles, and</li>
<li>Find Missing Alt Attributes.</li>
</ul>


<p>If this sounds cool, you may also like his <a href="http://blog.adrianroselli.com/2012/06/accessibility-bookmarklets-and-tools.html">Accessibility Bookmarklets and Tools</a>.</p>
<p><a rel="full-article" href="http://blog.adrianroselli.com/2015/01/css-bookmarklets-for-testing-and-fixing.html">Read on Adrian Roselli’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[What's New in CSS Selectors 4]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/whats-new-in-css-selectors-4/"/>
				<updated>2015-01-26T11:32:16-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/whats-new-in-css-selectors-4</id>
				<content type="html"><![CDATA[<p>Matt offers us a nice round-up of new selectors that will likely be a part of the <a href="http://dev.w3.org/csswg/selectors-4/">CSS 4 Selectors Module</a>. Notable additions:</p>

<ul>
<li><a href="https://grack.com/blog/2015/01/11/css-selectors-4/#has"><code>:has</code></a> &ndash; select an element based on children it contains,</li>
<li><a href="https://grack.com/blog/2015/01/11/css-selectors-4/#matches"><code>:matches</code></a> &ndash; a more compact way to select elements via alternate selector paths,</li>
<li><a href="https://grack.com/blog/2015/01/11/css-selectors-4/#not"><code>:not()</code> in a stack</a> &ndash; lets you combine multiple selectors not to match, using commas.</li>
<li><a href="https://grack.com/blog/2015/01/11/css-selectors-4/#column-combinator--and-nth-column">Column selection</a></li>
</ul>

<p><a rel="full-article" href="https://grack.com/blog/2015/01/11/css-selectors-4/">Read on Matt Mastracci’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[On Use of the `lang` Attribute]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/on-use-of-the-lang-attribute/"/>
				<updated>2015-01-26T11:32:05-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/on-use-of-the-lang-attribute</id>
				<content type="html"><![CDATA[<p>Adrian has put together a great overview of why <code>lang</code> is important and how many sites are using it. Here are a few takeaways:</p>

<blockquote>
    <ol>
        <li>VoiceOver on iOS uses the attribute to auto-switch voices.</li>
        <li>VoiceOver can speak a particular language using a different accent when specified.</li>
        <li>Leaving out the `lang` attribute may require the user to manually switch to the correct language for proper pronunciation.</li>
        <li>JAWS uses it to load the correct phonetic engine/phonologic dictionary — Handy for sites with multiple languages.</li>
        <li>NVDA (Windows) uses it in the same way as VoiceOver and JAWS.</li>
        <li>When used in HTML that is used to form an ePub or Apple iBooks document, it affects how VoiceOver will read the book.</li>
        <li>Firefox, IE10, and Safari (as of a year ago) only support CSS `hyphens: auto` when the `lang` attribute is set.</li>
    </ol>
</blockquote>


<p>Thanks for putting this together Adrian!</p>
<p><a rel="full-article" href="http://blog.adrianroselli.com/2015/01/on-use-of-lang-attribute.html">Read on Adrian Roselli’s Blog&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Longdesc Alternatives in HTML5]]></title>
				<link href="http://aaron-gustafson.com/notebook/links/longdesc-alternatives-in-html5/"/>
				<updated>2015-01-26T11:31:53-05:00</updated>
				<id>http://aaron-gustafson.com/notebook/links/longdesc-alternatives-in-html5</id>
				<content type="html"><![CDATA[<p>The insightful James Craig is compiling a list of alternatives to the <a href="http://lists.w3.org/Archives/Public/public-html-a11y/2014Jun/0115.html">troublesome <code>longdesc</code> attribute</a>. You should follow along.</p>
<p><a rel="full-article" href="http://cookiecrook.com/longdesc/">Read on James Craig’s Website&nbsp;&rarr;</a></p>]]></content>
			</entry>
		
	
</feed>
