<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title><![CDATA[Aaron Gustafson - Latest Posts]]></title>
	<link href="http://www.aaron-gustafson.com/atom-latest-posts.xml" rel="self"/>
	<link href="http://www.aaron-gustafson.com/"/>
	<updated>2015-05-06T10:43:24-07:00</updated>
	<id>http://www.aaron-gustafson.com/</id>
	<author>
		<name><![CDATA[Aaron Gustafson]]></name>
		
	</author>
	<generator uri="http://octopress.org/">Octopress</generator>

	
		
			<entry>
				<title type="html"><![CDATA[Slides From My Talk at #msEdgeSummit]]></title>
				<link href="http://www.aaron-gustafson.com/notebook/slides-from-my-talk-at-number-msedgesummit/"/>
				<updated>2015-05-05T17:14:00-07:00</updated>
				<id>http://www.aaron-gustafson.com/notebook/slides-from-my-talk-at-number-msedgesummit</id>
				<content type="html"><![CDATA[<p>I just came off stage from my talk at the <a href="http://devchannel.modern.ie/websummit2015">Microsoft Edge Web Summit</a> and I wanted to share the deck with you. The talk was live-streamed, but I will post a video link as soon as it is up.</p>

<!-- more -->




<figure class="video-embed video-embed--16x9">  
<iframe class="video-embed__video" src="//www.slideshare.net/slideshow/embed_code/key/H1xKkpN0KIoXq3" frameborder="0"></iframe>  
</figure>

]]></content>
			</entry>
		
	
		
			<entry>
				<title type="html"><![CDATA[Lessons Learned From Atari]]></title>
				<link href="http://www.aaron-gustafson.com/notebook/lessons-learned%20from-atari/"/>
				<updated>2015-05-05T15:05:40-07:00</updated>
				<id>http://www.aaron-gustafson.com/notebook/lessons-learned from-atari</id>
				<content type="html"><![CDATA[<p>In watching <a href="http://www.slashfilm.com/watch-atari-game-over/"><cite>Atari: Game Over</cite></a>, I couldn&rsquo;t help but see all of the parallels between the early video game industry and the web design industry. The boys’ club… Engineers as rockstars… It&rsquo;s a tale of a meteoric commercial rise followed by a swift and dismal collapse.</p>

<!-- more -->


<p>The film centers around the urban legend of millions of <cite>E.T. The Videogame</cite> cartridges being buried in a landfill in New Mexico as Atari burying it&rsquo;s shame over producing such a bad video game. Many cite <cite>E.T. The Videogame</cite> as the reason for the collapse of the industry in 1983, but it wasn&rsquo;t the case.</p>

<p>Xbox co-creator <a href="https://twitter.com/seamusblackley">Seamus Blackley</a> offered this:</p>

<blockquote><p>The behavior patterns that created the conditions for the E.T. failure is what destroyed the video game industry.</p></blockquote>

<p>The behavior patterns in question: greed; ridiculous timelines (E.T. was conceived and programmed in 5 weeks by one man: <a href="http://en.wikipedia.org/wiki/Howard_Scott_Warshaw">Howard Scott Warshaw</a>); and hubris.</p>

<p>There are a lot of parallels with the Silicon Valley of today. Food for thought.</p>
]]></content>
			</entry>
		
	
		
	
		
	
		
	
		
			<entry>
				<title type="html"><![CDATA[Collected Reactions to //build/]]></title>
				<link href="http://www.aaron-gustafson.com/notebook/collected-reactions-to-build/"/>
				<updated>2015-04-30T07:53:11-07:00</updated>
				<id>http://www.aaron-gustafson.com/notebook/collected-reactions-to-build</id>
				<content type="html"><![CDATA[<p>I may work for Microsoft, but I don’t know everything that’s going on across the company. It’s big and I don’t have that kind of time.</p>

<!-- more -->


<p>Anyway <a href="http://aka.ms/ktlsyd">//build/</a>, the Microsoft conference, is going on right now and as you’d expect, there are a ton of new announcements. I’ve watched a few of the talks virtualy and am particularly excited about the new browser (whose name has finally been revealed): <a href="https://www.microsoft.com/en-us/windows/browser-for-doing">Microsoft Edge</a>. I’m also very interested to see where things go with <a href="https://www.microsoft.com/microsoft-hololens/en-us">HoloLens</a>.</p>

<p>One graphic that cropped up that blew my mind was this one talking about where Windows 10 is going:</p>

<figure id="fig-2015-04-30-01" class="media-container"><img alt="The Windows 10 continuum from an Internet of Things board up to a SurfaceHub and HoloLens"  src="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http://news.microsoft.com/build2015/assets/photos/build720150428_web.png&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" srcset="https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http://news.microsoft.com/build2015/assets/photos/build720150428_web.png&amp;resize_w=1920&amp;container=focus&amp;refresh=2592000 1920w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http://news.microsoft.com/build2015/assets/photos/build720150428_web.png&amp;resize_w=600&amp;container=focus&amp;refresh=2592000 600w,https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?url=http://news.microsoft.com/build2015/assets/photos/build720150428_web.png&amp;resize_w=320&amp;container=focus&amp;refresh=2592000 320w" sizes="100vw"></figure>


<p>You’ve often heard me discuss <a href="http://adaptivewebdesign.info/1st-edition/chapter-1.html">experience as a continuum</a>. Microsoft is living it.</p>

<p>If you didn’t watch the streaming talks and want to hear about what was announced from some independent sources, I’d recommend reading these:</p>

<ul>
<li><a href="http://www.wired.com/2015/04/microsoft-build-hololens/">Microsoft Shows HoloLens’ Augmented Reality Is No Gimmick</a> — <cite>Wired</cite>
A good overview of the possibilities of HoloLens with a recap of what was shown. I caught this demo on the lifestream. It was pretty impressive. I can’t wait to try a HoloLens myself.</li>
<li><a href="http://thenextweb.com/microsoft/2015/04/30/microsoft-opens-up-applications-for-developers-to-test-ios-and-android-app-conversion-tools/">Microsoft opens up applications for developers to test iOS and Android app conversion tools</a> — <cite>The Next Web</cite>
The Microsoft App Store is a little scant on first-rate programs right now, so in a play to make it stupid-simple for iOS and Android developers to run on Windows 10, the folks at Microsoft have built a conversion tool that ports the app for you. It’s worth noting that you can also port a website into a native Windows app. Smart move on Microsoft’s part if you ask me.</li>
<li><a href="http://thenextweb.com/microsoft/2015/04/30/hands-on-with-the-new-minimalist-microsoft-edge-browser/">Hands-on: The new Microsoft Edge browser is a picture of minimalism</a> — <cite>The Next Web</cite>
Obviously the web is where I live and work. I’ve been playing with early builds of the new Microsoft browser for a few months now and have been pretty happy with its speed and capabilities, but it is nice to read an outside perspective on it.</li>
<li><a href="http://gizmodo.com/microsoft-just-nonchalantly-showed-us-the-single-device-1701020050">Microsoft Just Nonchalantly Showed Us the Single-Device UI of the Future</a>
I don’t know about &ldquo;nonchalantly&rdquo;, but the whole Continuum feature is pretty amazing. The potential for being able to use the computer in your pocket with other peripherals is pretty intriguing. Imagine using your phone, a set of holographic or <a href="http://www.amazon.com/Cinemizer-1909-127-Multimedia-Video-Glasses/dp/B0091OI530/">virtual screen glasses</a>, and a bluetooth keyboard &amp; mouse to get work done on a plane. No need to worry about someone leaning back and breaking your laptop!</li>
<li><a href="http://techcrunch.com/2015/04/30/hololens-is-real/">HoloLens Hands-On: How We Built An App For Microsoft’s Augmented Reality Headset</a><br/>
One reporter’s experience developing for and playing with HoloLens. Sounds like it was pretty cool. I wonder if it can be tweaked to work for people with poor vision like me or if it fits nicely over glasses.</li>
<li><a href="http://www.wired.com/2015/05/microsofts-one-billion-device-vision-genius-next-impossible/">Microsoft’s Windows 10 Vision Isn’t As Simple as It Seems</a><br/>
A deeper analysis of Microsoft’s play for more developer (and consumer) mindshare.</li>
</ul>


<p><em>I will continue adding to this list as new &amp; interesting pieces come out</em>.</p>
]]></content>
			</entry>
		
	
		
	
		
			<entry>
				<title type="html"><![CDATA[Lies, Damn Lies, and JavaScript]]></title>
				<link href="http://www.aaron-gustafson.com/notebook/lies-damn-lies-and-javascript/"/>
				<updated>2015-04-27T12:10:11-07:00</updated>
				<id>http://www.aaron-gustafson.com/notebook/lies-damn-lies-and-javascript</id>
				<content type="html"><![CDATA[<p>Late last week I stumbled on a video from <a href="https://twitter.com/graemepyle">Graeme Pyle</a> that exposed a UX lie in the <a href="https://www.fnb.co.za/">First National Bank of South Africa</a>.</p>

<!-- more -->


<p><figure id="fig-gpBWwl-Ngak" class="figure figure--video"><div class="video-embed video-embed--youtube video-embed--4x3"><a class="video-embed__lazy-link" style="background-image:url(http://i2.ytimg.com/vi/gpBWwl-Ngak/0.jpg)" href="//www.youtube.com/watch?v=gpBWwl-Ngak" data-lazy-video-src="http://www.youtube.com/embed/gpBWwl-Ngak?autoplay=1"><div class="video-embed__lazy-div"></div><div class="video-embed__lazy-info">Shocking discovery: fnb.co.za progress bar a placebo!</div></a></div></figure></p>

<p>On the off chance you don’t want to watch the video, I’ll recap: When accessing certain screens on the FNB site, a progress meter is shown to indicate new content is being flowed into the browser. But it’s not.</p>

<p>As Graeme uncovered, the site uses JavaScript to create the progress bar, but the progress is not tied to anything except some basic JavaScript logic. The progress bar has no grounding in reality. It uses timeouts and follows a steady incrementation for a bit, then jumps up randomly for a bit before finishing.</p>

<p>Taking the easy way out like this may seem like a non-issue, but what happens when your user loses network connectivity? You guessed it: The progress meter still runs. <em>Doh!</em></p>

<p>Tracking true activity progress (like time to upload a file) involves constant communication between the server and the client. It used to be pretty difficult to do (and <a href="http://search.cpan.org/~lgoddard/CGI-ProgressBar-0.05/lib/CGI/ProgressBar.pm">required Perl</a>), but nowadays we have <a href="http://www.w3.org/TR/websockets/">WebSockets</a> and it’s much easier to keep the lines of communication between client and server open.</p>

<p>There is no reason to fake a progress bar. It’s pointless. Especially when you don’t even check to see if the user’s connection is still online.</p>
]]></content>
			</entry>
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
			<entry>
				<title type="html"><![CDATA[Tips for Surviving Google’s “Mobilegeddon”]]></title>
				<link href="http://www.aaron-gustafson.com/notebook/tips-for-surviving-googles-mobilegeddon/"/>
				<updated>2015-04-21T06:10:12-07:00</updated>
				<id>http://www.aaron-gustafson.com/notebook/tips-for-surviving-googles-mobilegeddon</id>
				<content type="html"><![CDATA[<p>Today is the day <a href="http://www.economist.com/news/business-and-finance/21648947-worlds-biggest-search-engine-shakes-up-its-algorithms-mobilegeddon">Google updates it algorithm to take into account mobile-friendliness</a>. Here are a few tips that will help you embrace mobile without tearing your hair out.</p>

<!-- more -->


<h2>1. Embrace mobile-first CSS</h2>

<p>This is a quick win. I’ve done the mobile-first overhaul on a number of existing sites over the last few years and the best strategy I’ve found is this:</p>

<ol>
<li>Create two CSS files. Name the first something like &ldquo;basic.css&rdquo; and link to it with <code>media="all"</code>. Name the second something like &ldquo;advanced.css&rdquo; and link to it with <code>media="only screen"</code>.</li>
<li>Move all of your existing desktop-only CSS into advanced.css and wrap the rules in a media query corresponding to your design width (e.g. <code>@media (min-width:60em)</code> for a 960px max width).</li>
<li>Open a page from your site in a new browser window and make it as small as possible. Move any basic typographic and color styles from advanced.css to default.css and refresh the page. How does it look? Make the browser wider. Still acceptable? Awesome! This is the CSS you’ll serve to older browsers that don’t understand media queries and it forms the basis of your larger screen styles.</li>
<li>Shrink the browser back down to the smallest it can go and create a breakpoint for that size in advanced.css (e.g. <code>@media (min-width:10.5em)</code> if you want to small target devices like the <a href="https://getpebble.com/">Pebble</a>). Move any styles you want applied in this scenario from your &ldquo;full screen&rdquo; breakpoint and add any new rules you need to make things look good.</li>
<li>Increase the browser width until the layout looks odd, then make a new breakpoint and move in or add the necessary styles.</li>
<li>Rinse &amp; repeat until you get up to the &ldquo;full screen&rdquo; layout.</li>
<li>Move your print styles—you do have print styles, right?—into default.css and wrap them in a print <code>@media</code> block.</li>
</ol>


<p>For another approach to responsive retrofitting, check out <a href="http://webstandardssherpa.com/reviews/responsive-retrofitting/">this piece from Ben Callahan</a>.</p>

<h2>2. Focus on key tasks</h2>

<p>Every page has a purpose. If it doesn’t, you don’t need it. Find the page’s purpose and make that the focus. Eliminate distractions and reduce the amount of friction a user encounters when trying to accomplish the task.</p>

<p>If company or client politics preclude you from getting rid of all distractions on a page, consider <a href="http://www.filamentgroup.com/lab/ajax-includes-modular-content.html">a lazy-loading strategy</a> to bring them in with JavaScript only when there is more screen real estate.</p>

<h2>3. Get smarter about images</h2>

<p>Images are great, but they often comprise the majority of a web page’s bulk. To slim things down, first consider whether a given image is actually needed. If it isn’t, get rid of it. If it offers an enhancement, but isn’t crucial, consider lazy-loading it after page load. If the image is really important, <a href="https://ericportis.com/posts/2014/srcset-sizes/">use <code>srcset</code> and <code>sizes</code></a> (or the <code>picture</code> element) to deliver the smallest and yet most appropriate image to your users, based on their device.</p>

<h2>4. Embrace the continuum</h2>

<p>As designers and developers, we often try to control everything. But we have to realize that we can’t control everything on the Web. People on different devices have different capabilities and considerations. They will need your website to be flexible enough to allow them to accomplish their goals no matter what.</p>

<p>Understanding that is key to building experiences that move seamlessly across devices. You know, <a href="http://alistapart.com/article/understandingprogressiveenhancement">progressive enhancement</a>. It’s key to embracing the Web for all of its inherent web-iness.</p>

<hr>


<p>And there you have it: 4 simple, but effective guidelines for creating awesome websites that will fair well under Google’s new algorithm. And guess what: Your users will benefit too.</p>
]]></content>
			</entry>
		
	
		
	
		
	
		
	
		
	
		
	
</feed>
